/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.view;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.example.controller.MainViewController;
import org.example.controller.OrderRegisterController;
import org.example.model.ServiceOrder;

/**
 *
 * @author cadu
 */
public class MainView extends javax.swing.JFrame {
    
     private static ArrayList<ServiceOrder> serviceOrdersList;
     MainViewController mvc;
    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
        serviceOrdersList = new ArrayList<>();
        this.mvc = new MainViewController(serviceOrderTable, serviceOrdersList);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        serviceOrdersPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        serviceOrderTable = new javax.swing.JTable();
        removeServiceOrderBtn = new javax.swing.JToggleButton();
        addServiceOrderBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        filterBtn = new javax.swing.JButton();
        filterTxtField = new javax.swing.JTextField();
        filterCBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MyMechanic");

        serviceOrdersPanel.setBackground(new java.awt.Color(0, 51, 102));
        serviceOrdersPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        serviceOrderTable.setBackground(new java.awt.Color(255, 255, 255));
        serviceOrderTable.setForeground(new java.awt.Color(0, 0, 0));
        serviceOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome do Cliente", "Contato", "Data da manutenção", "Veiculo", "Kilometros Andados", "Nivel do Combustivel", "Mecanico Responsavel", "Identificador", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        serviceOrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                serviceOrderTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(serviceOrderTable);

        removeServiceOrderBtn.setBackground(new java.awt.Color(255, 255, 255));
        removeServiceOrderBtn.setForeground(new java.awt.Color(0, 0, 0));
        removeServiceOrderBtn.setText("Remover Ordem de Serviço");
        removeServiceOrderBtn.setActionCommand("rmvServiceOrderBtn");
        removeServiceOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeServiceOrderBtnActionPerformed(evt);
            }
        });

        addServiceOrderBtn.setBackground(new java.awt.Color(255, 255, 255));
        addServiceOrderBtn.setForeground(new java.awt.Color(0, 0, 0));
        addServiceOrderBtn.setText("Adicionar Ordem de Serviço");
        addServiceOrderBtn.setActionCommand("addServiceOrderBtn");
        addServiceOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addServiceOrderBtnActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pesquisar por:");

        filterBtn.setBackground(new java.awt.Color(255, 255, 255));
        filterBtn.setForeground(new java.awt.Color(0, 0, 0));
        filterBtn.setText("Find");
        filterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterBtnActionPerformed(evt);
            }
        });

        filterCBox.setBackground(new java.awt.Color(255, 255, 255));
        filterCBox.setForeground(new java.awt.Color(0, 0, 0));
        filterCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Identificador", "Nome do Cliente", "Veiculo" }));

        javax.swing.GroupLayout serviceOrdersPanelLayout = new javax.swing.GroupLayout(serviceOrdersPanel);
        serviceOrdersPanel.setLayout(serviceOrdersPanelLayout);
        serviceOrdersPanelLayout.setHorizontalGroup(
            serviceOrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serviceOrdersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(serviceOrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviceOrdersPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(serviceOrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviceOrdersPanelLayout.createSequentialGroup()
                                .addComponent(addServiceOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(removeServiceOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviceOrdersPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filterCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filterTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filterBtn)
                                .addGap(5, 5, 5)))))
                .addContainerGap())
        );
        serviceOrdersPanelLayout.setVerticalGroup(
            serviceOrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serviceOrdersPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(serviceOrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterBtn)
                    .addComponent(filterTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(serviceOrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeServiceOrderBtn)
                    .addComponent(addServiceOrderBtn))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(serviceOrdersPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(serviceOrdersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Abre a janela para cadastro de ordem de serviços.
    
    private void addServiceOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addServiceOrderBtnActionPerformed
        try{
            new OrderRegister((DefaultTableModel) serviceOrderTable.getModel(), this).setVisible(true);
        } catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_addServiceOrderBtnActionPerformed

    // Remove a ordem de serviço da lista, por meio do controlador.
    
    private void removeServiceOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeServiceOrderBtnActionPerformed
        try{
            if (serviceOrderTable.getSelectedRow() != -1){
                mvc.removeRow();
            }
        } catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_removeServiceOrderBtnActionPerformed

    // Abre a janela de listagem de peças e serviços ao detectar um duplo clique em uma linha.
    
    private void serviceOrderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serviceOrderTableMouseClicked
        try{
            if (evt.getClickCount() == 2) {
                int row = serviceOrderTable.getSelectedRow();
                int id = Integer.parseInt(serviceOrderTable.getValueAt(row, 7).toString());
                MainViewController mvc = new MainViewController(serviceOrderTable, serviceOrdersList);
                new ServicePartView(mvc.getRowObject(id)).setVisible(true);
                
    }
        } catch (Exception ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_serviceOrderTableMouseClicked

    private void filterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterBtnActionPerformed
        try{
            if (filterCBox.getSelectedItem().toString().equals(" ")){
                clearJTable();
                for(ServiceOrder serviceOrder : serviceOrdersList){
                    mvc.addRow(serviceOrder);
                }
            }
            else if (filterCBox.getSelectedItem().toString().equals("Identificador")){
                for (ServiceOrder serviceOrder : serviceOrdersList){
                    if (serviceOrder.getId() == Integer.parseInt(filterTxtField.getText())){
                        clearJTable();
                        mvc.addRow(serviceOrder);
                    }
                }
            }
            else if (filterCBox.getSelectedItem().toString().equals("Nome do Cliente")){
                for (ServiceOrder serviceOrder : serviceOrdersList){
                    if (serviceOrder.getCostumer().getName().equals(filterTxtField.getText())){
                        clearJTable();
                        mvc.addRow(serviceOrder);
                    }
                }
            }
            else if (filterCBox.getSelectedItem().toString().equals("Veiculo")){
                for (ServiceOrder serviceOrder : serviceOrdersList){
                    if (serviceOrder.getVehicle().getModel().equals(filterTxtField.getText())){
                        clearJTable();
                        mvc.addRow(serviceOrder);
                    }
                }
            }
        } catch (Exception ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_filterBtnActionPerformed
    
    private void clearJTable(){
        try{
            DefaultTableModel table = (DefaultTableModel) serviceOrderTable.getModel();
            table.setRowCount(0);
        } catch (Exception ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    // Adiciona objetos na lista de ordem de serviços.
    
    public void addToServiceOrderList(ServiceOrder serviceOrder){
        serviceOrdersList.add(serviceOrder);
    }
    
    // Retorna a lista de ordem de serviços.
    
    public ArrayList<ServiceOrder> getServiceOrdersList(){
        return this.serviceOrdersList;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addServiceOrderBtn;
    private javax.swing.JButton filterBtn;
    private javax.swing.JComboBox<String> filterCBox;
    private javax.swing.JTextField filterTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton removeServiceOrderBtn;
    private javax.swing.JTable serviceOrderTable;
    private javax.swing.JPanel serviceOrdersPanel;
    // End of variables declaration//GEN-END:variables
}
